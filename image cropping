import os
import cv2
from retinaface import RetinaFace

def detect_and_crop_faces(image_path, save_folder, start_index):
    # Load the image
    image = cv2.imread(image_path)

    # Detect faces in the image
    faces = RetinaFace.detect_faces(image_path)
    
    if isinstance(faces, dict):
        count = start_index
        for i, (key, face) in enumerate(faces.items()):
            facial_area = face['facial_area']
            x, y, width, height = facial_area
            cropped_face = image[y:height, x:width]

            # Create a directory if it doesn't exist
            if not os.path.exists(save_folder):
                os.makedirs(save_folder)

            # Save the cropped face with a sequential name
            cropped_face_path = os.path.join(save_folder, f"{count:04d}.jpg")
            cv2.imwrite(cropped_face_path, cropped_face)
            print(f"Cropped face saved to {cropped_face_path}")
            count += 1
        return count
    else:
        print("No faces detected.")
        return start_index

def process_folders(base_folder):
    for i in range(1, 90):  # From 001 to 089
        folder_name = f"{i:03d}"
        folder_path = os.path.join(base_folder, folder_name)
        save_folder = os.path.join(folder_path, "cropped")

        if os.path.exists(folder_path):
            count = 0
            for file_name in os.listdir(folder_path):
                if file_name.endswith(".png"):
                    image_path = os.path.join(folder_path, file_name)
                    count = detect_and_crop_faces(image_path, save_folder, count)
        else:
            print(f"Folder {folder_name} does not exist.")

# Example usage
base_folder = r'C:\i.bug data\Neutral ev'  # Replace with the path to your base folder containing the folders 001 to 089
process_folders(base_folder)
